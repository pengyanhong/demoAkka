multiThread{
  akka.actor.deployment./master/workerRouter{
    router="round-robin"
    nr-of-instances=50
  }
}

remote{
	akka {
	  actor {
	    provider = "akka.remote.RemoteActorRefProvider"
	    deployment{
	      /remoteMaster{
	        #remote="akka.tcp://MasterApp@127.0.0.1:2552"
	        router="round-robin"
	        nr-of-instances=10
	        target{
	          nodes=[
	            "akka.tcp://MasterApp@127.0.0.1:2551",
	            "akka.tcp://MasterApp@127.0.0.1:2552"
	          ]
	        }
	      }
	      /master/workerRouter{
	        router="round-robin"
	        nr-of-instances=10
	      }
	    }
	  }
	
	  remote {
	    transport = "akka.remote.netty.NettyRemoteTransport"
	    netty.tcp {
	      hostname = "127.0.0.1"
	      port = 2551
	    }
	  }
	
	  # Uncomment the following four lines to employ the 'secure cookie handshake'
	  # This requires the client to have the known secure-cookie and properly
	  # transmit it to the server upon connection. Because both the client and server
	  # programs use this common.conf file, they will both have the cookie
	  #remote {
	  #  secure-cookie = "0009090D040C030E03070D0509020F050B080400"
	  #  require-cookie = on
	  #}
	}
}

cluster{
	akka {
	  actor {
	    provider = "akka.cluster.ClusterActorRefProvider"
	    deployment {
		  /master/workerRouter {
		    router = "consistent-hashing"
	        nr-of-instances = 10
		    cluster {
		      enabled = on
		      max-nr-of-instances-per-node = 3
		      allow-local-routees = on
		    }
		  }
		}
	  }
	  remote {
	    log-remote-lifecycle-events = off
	    netty.tcp {
	      hostname = "127.0.0.1"
	      port = 2552
	    }
	  }
	  cluster {
	    min-nr-of-members = 2
	    seed-nodes = [
	      "akka.tcp://MasterApp@127.0.0.1:2551",
	      "akka.tcp://MasterApp@127.0.0.1:2552"]
	 
	    auto-down=on
	  }
	}
}